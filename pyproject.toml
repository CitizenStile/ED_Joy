[project]
name = "ED_Joy"
version = "0.4.1"
description = "Joystick monitoring and re-focusing on specified app"
authors = [{name="CitizenStile", email="citizenstile@pm.me"}]

license = {text = "MIT License"}
readme = "README.md"
requires-python = ">=3.13,<3.14"
dependencies = [
    "pygame (>=2.6.1,<3.0.0)",
    "toml (>=0.10.2,<0.11.0)",
    "pyside6 (>=6.9.0,<7.0.0)",
    "pyside6-addons (>=6.9.0,<7.0.0)",
    "pyside6-essentials (>=6.9.0,<7.0.0)",
    "shiboken6 (>=6.9.0,<7.0.0)",
    "pyinstaller (>=6.13.0,<7.0.0)",
    "pywin32-ctypes (>=0.2.3,<0.3.0)",
]

[tool.poetry.group.dev.dependencies]
questionary = "^2.1.0"
pytest = "^8.3.5"

[tool.poetry.scripts]
build_standalone = "build:file"
build_file = "build:file"
build_exe = "build:file"
build_onefile = "build:file"
build_folder = "build:folder"
build = "build:both"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]
builtins = ["api"]

# Same as Black.
line-length = 88
indent-width = 4

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["C901","E", "F", "N", "W"]
# select = ["ALL"]
ignore = ["F811"]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = true

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[tool.ruff.lint.per-file-ignores]
# Ignore `E402` (import violations) in all `__init__.py` files, and in `path/to/file.py`.
"*.spec" = ["F821"]

[tool.pyright]
typeCheckingMode = "off"
